services:
  agency-os:
    build:
      context: .
      dockerfile: Dockerfile
    # La sección 'ports' se elimina. Coolify la gestionará a través de la UI.
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8055/server/health"]
      interval: 1m  # Comprobar cada minuto
      timeout: 30s    # Esperar hasta 30 segundos por una respuesta
      retries: 3      # Reintentar 3 veces
      start_period: 2m # Darle 2 minutos de gracia al contenedor para que arranque antes de empezar a comprobar
    environment:
      KEY: ${KEY}
      SECRET: ${SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DB_CLIENT: pg
      DB_HOST: ${COOLIFY_SERVICE_POSTGRESQL_HOST}
      DB_PORT: ${COOLIFY_SERVICE_POSTGRESQL_PORT}
      DB_DATABASE: ${COOLIFY_SERVICE_POSTGRESQL_DATABASE}
      DB_USER: ${COOLIFY_SERVICE_POSTGRESQL_USER}
      DB_PASSWORD: ${COOLIFY_SERVICE_POSTGRESQL_PASSWORD}
      CACHE_ENABLED: "true"
      CACHE_STORE: redis
      CACHE_REDIS: ${COOLIFY_SERVICE_REDIS_URL}
      PUBLIC_URL: ${PUBLIC_URL}
    volumes:
      - uploads:/app/uploads
      - extensions:/app/extensions

volumes:
  uploads:
    name: ${COOLIFY_VOLUME_NAME_agencyos-uploads}
  extensions:
    name: ${COOLIFY_VOLUME_NAME_agencyos-extensions}
